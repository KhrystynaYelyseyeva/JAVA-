 1.
	"private GRect paddle" створенна як змінна класу оскільки вона використовується 
ще у методі "mouseMoved", яка не приймає інші параметри, оскільки є стандартною. 
А нам потрібно, щоб курсор рухався за ракеткою. 

	"private GLabel lost" створенна як змінна класу, оскільки вона використовується 
у методі "moveBall" і показує гравцю повідомлення, що гра була невдалою і рахує 
кількість спроб, що залишилася. Метод "moveBall" повторюється циклічно допоки
не закінчаться всі спроби або гравець не виграє. Тому кожен раз перед тим як 
виконати метод "moveBall" потрібно перевірити і видалити попереднє повідомлення 
про невдачу, якщо воно було присутнє. Це виконується з початку циклу. Метод
"moveBall" вже повертає одну змінну "attempts". Наскільки мені відомо метод має 
повертати лише одну змінну, тому не можна повернути ще змінну "lost".

	"private int bricksCounter" це змінна-лічильник, яка рахує кількість цеглин, що 
залишилася, щоб перевірити чи гравець виграв. Оскільки метод "moveBall" 
виконується циклічно стільки разів скільки задано спроб, або поки гравець не 
виграє, то потрібно, щоб кількість цеглин кожен раз рахувалась не спочатку з 
кожною ітерацією циклу, а продовжувала попередній обрахунок. 

	"private double vx", "private double vy" змінні класу, оскільки так було 
рекомендовано в умові задачі. Хоча, як на мене, їх можна було просто було 
оголосити у методі  "moveBall", оскільки їхнє значення стале і не змінюється.
Це мало б значення, якби швидкість мяча з часом збільшувалася, тоді б потрібно 
було зберігати їх значення після попередньої спроби.

2. 
	Для того, щоб перевірити чи розбита вся цегла, спочатку в методі "run" 
перераховуємо кількість всієї цегли і присвоюємо її лічильнику "bricksCounter"
(bricksCounter = NBRICKS_PER_ROW * NBRICK_ROWS). Тоді використовуємо 
"bricksCounter" у методі "moveBall". Кожен раз як мяч торкається цеглини 
віднімаємо один від  "bricksCounter". Оскільки "bricksCounter" у нас глобальна 
змінна, то з кожною новою спробою і початком циклу попереднє значення буде 
зберігатися і буде продовжувати віднімати одиницю. У випадку коли "bricksCounter"
буде дорівнювати нулю - гра закінчиться перемогою гравця.

	При тестуванні коду я робила певні зміни. Наприклад, коли гравець вигравав, 
висвітлювалось повідомлення про його перемогу, а мяч всеодно можна було запустити
допоки всі спроби не закінчувались.
